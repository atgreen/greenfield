# === K8s ========================================================

HOSTNAME=k8s.$CONFIG_DOMAIN

# Generate a couple of MAC addresses for eth0 and eth1.
generate_MAC_address ETH0_MAC

cat > dev.ks <<EOF
install
text
reboot
lang en_US.UTF-8
keyboard us
network --bootproto static --ip=10.0.0.80 \
 --gateway=10.0.0.1 \
 --netmask=255.255.255.0 --nameserver=10.0.0.99 \
 --hostname=$HOSTNAME \
 --nodefroute \
 --noipv6 \
 --device=$ETH0_MAC
rootpw $CONFIG_ROOT_PASSWORD
firewall --disabled
selinux --permissive
timezone --utc $CONFIG_TIMEZONE
bootloader --location=mbr --append="rd_NO_PLYMOUTH"
zerombr
clearpart --all --initlabel
autopart
%packages
@core
ipa-client
emacs
%end

%post --log=/root/post_install_1.log
# Force this host info the hosts file.
echo "10.0.0.80  k8s.$CONFIG_DOMAIN k8s" >> /etc/hosts

# Fix networking...
echo "nameserver 10.0.0.99" > /etc/resolv.conf
hostname k8s.$CONFIG_DOMAIN
echo "PEERDNS=no" >> /etc/sysconfig/network-scripts/ifcfg-eth1

cat > /etc/yum.repos.d/greenfield.repo <<END
[rhel-7-server-rpms]
baseurl=$CONFIG_LIBRARY_URL/repos/rhel-7-server-rpms
enable=1
gpgcheck=0
nsslverify=0
[rhel-7-server-extras-rpms]
baseurl=$CONFIG_LIBRARY_URL/repos/rhel-7-server-extras-rpms
enable=1
gpgcheck=0
nsslverify=0
END

yum update -y
yum install -y kubernetes etcd flannel

cat > /root/install.sh <<END
#!/bin/sh
set -x
/usr/sbin/ipa-client-install -U -p admin -w $CONFIG_ADMIN_PASSWORD

curl $CONFIG_LIBRARY_URL/etcd.conf > /etc/etcd/etcd.conf
curl $CONFIG_LIBRARY_URL/config > /etc/kubernetes/config
curl $CONFIG_LIBRARY_URL/apiserver > /etc/kubernetes/apiserver

for SERVICES in etcd kube-apiserver kube-controller-manager kube-scheduler; do 
    systemctl restart \\\$SERVICES
    systemctl enable \\\$SERVICES
    systemctl status \\\$SERVICES 
done

for SERVICES in docker kube-proxy.service kubelet.service; do 
    systemctl restart \\\$SERVICES
    systemctl enable \\\$SERVICES
    systemctl status \\\$SERVICES 
done

curl $CONFIG_LIBRARY_URL/flannel-config.json | etcdctl set coreos.com/network/config

etcdctl get coreos.com/network/config

systemctl start flanneld
systemctl enable flanneld

END

chmod +x /root/install.sh

cat > /etc/systemd/system/install-k8s.service <<END
[Unit]
Description=One-shot service to install K8s
After=network.target

[Service]
Type=oneshot
ExecStart=/usr/bin/su - root -c /root/install.sh
TimeoutStartSec=0
ExecStartPost=/usr/bin/systemctl disable install-k8s.service

[Install]
WantedBy=default.target
END

systemctl enable install-k8s.service

%end
EOF

virt-install \
    --disk $GF_RHELDVD,device=cdrom \
    --name k8s.$CONFIG_DOMAIN --ram 4096 \
    --os-variant=rhel7 \
    --rng=/dev/random \
    --disk $IMAGEDIR/$HOSTNAME.img,format=qcow2,size=400 \
    --network network:10_0,model=virtio,mac=$ETH0_MAC \
    -l $CONFIG_MOUNTPOINT -x "ks=file:/dev.ks" \
    --initrd-inject=dev.ks --force \
    --noautoconsole --wait=-1

echo "Waiting for k8s to install..."

# until $(curl --output /dev/null --silent -k --fail http://10.0.0.80:4001); do printf '.'; sleep 5; done
